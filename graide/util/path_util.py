import os
import re

from graide import constants as gc

PACKAGE_ROOT = os.path.dirname(os.path.abspath(__name__))


def data_dir() -> str:
    return os.path.join(PACKAGE_ROOT, "data")


def analysis_dir() -> str:
    return os.path.join(data_dir(), "analysis")


def base_dir(decision_level: gc.DecisionLevel) -> str:
    return os.path.join(data_dir(), f"{decision_level.name.lower()}-level")


def _convert_to_snake_case(name):
    """
    Convert strings to snake_case. The input is typically CamelCase but can also be snake_case as the function is
    idempotent. This is the accepted solution from
    https://stackoverflow.com/questions/1175208/elegant-python-function-to-convert-camelcase-to-snake-case
    """

    s1 = re.sub("(.)([A-Z][a-z]+)", r"\1_\2", name)
    return re.sub("([a-z0-9])([A-Z])", r"\1_\2", s1).lower()


def strategy_dir(decision_level: gc.DecisionLevel, dataset_name: str, strategy_name: str) -> str:
    """The directory in which to store the artefacts generated by `run_screening` for a given strategy."""

    return os.path.join(base_dir(decision_level), dataset_name, _convert_to_snake_case(strategy_name))
